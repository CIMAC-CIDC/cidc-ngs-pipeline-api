{
    "run id": [
        [
            "analysis/somatic/{run id}/{run id}_tnscope.output.vcf.gz",
            "somatic variants: vcf file of somatic variants",
            "VCF file of somatic variants using one of the following the Sentieon somatic callers {tnscope (default), tnhaplotyper2, tnsnv}.\n\nTNscope algorithm- https://support.sentieon.com/manual/usages/general/#tnscope-algorithm\nTNhaplotyper2- https://support.sentieon.com/manual/usages/general/#tnhaplotyper2-algorithm\nTNsnv - https://support.sentieon.com/manual/usages/general/#tnsnv-algorithm",
            "somatic"
        ],
        [
            "analysis/somatic/{run id}/{run id}_tnscope.output.maf",
            "somatic variants: maf file of somatic variants",
            "MAF file of VEP annotated variants using vcf2maf tool (https://github.com/mskcc/vcf2maf).  The vep annotated vcf (output.vcf.gz) file was used as the input for vcf2maf.",
            "somatic"
        ],
        [
            "analysis/somatic/{run id}/{run id}_tnscope.filter.vcf.gz",
            "somatic variants: vcf file of filtered somatic variants",
            "VCF file of filtered somatic variants.  With the output.vcf file as input, the vcftools software was used with parameter --remove-filtered-all to remove any variants whose FILTER column is anything other than PASS.  see http://vcftools.sourceforge.net/man_latest.html",
            "somatic"
        ],
        [
            "analysis/somatic/{run id}/{run id}_tnscope.filter.maf",
            "somatic variants: maf file of filtered somatic variants",
            "MAF file of VEP annotated filtered variants using vcf2maf tool (https://github.com/mskcc/vcf2maf).  The filtered vep annotated vcf file (filter.vep.vcf) file was used as input for vcf2maf.",
            "somatic"
        ],
        [
            "analysis/germline/{run id}/{run id}_vcfcompare.txt",
            "somatic variants: overlap of somatic and germline variants",
            "VCFtool's vcf-compare (http://vcftools.sourceforge.net/perl_module.html#vcf-compare) is used to compare somatic and germline variants.  The file shows the number of common variants, somatic only, and germline only variants.",
            "somatic"
        ],
        [
            "analysis/report/somatic_variants/07_tumor_mutational_burden.tsv",
            "somatic variants: report file of tumor mutational burden in tumor and normal",
            "This file derived from the somatic and germline variants comparison results generated by vcf-compare (http://vcftools.sourceforge.net/perl_module.html#vcf-compare) and is formatted to be human readable.  The file reports the number of somatic/tumor only variants, germline/normal only variants, the number of shared variants, and the percent overlap (using the total number of somatic variants as the denominator).",
            "somatic"
        ],
        [
            "analysis/report/neoantigens/01_HLA_results.tsv",
            "hla: report file of combined MHC class I and II results",
            "This file reports the MHC class I and II results.  The class I alleles are derived from the OptiType results and the class II alleles come from the xHLA results. ",
            "HLA"
        ],
        [
            "analysis/neoantigen/{run id}/combined/{run id}.filtered.tsv",
            "neaontigen: list of predicted neoantigens",
            "The combined MHC class I and II predicted neoantigens using the pVACseq software.  The column definitions are given here (ref: https://pvactools.readthedocs.io/en/latest/pvacseq/output_files.html)",
            "neoantigen"
        ],
        [
            "analysis/purity/{run id}/{run id}.optimalpurityvalue.txt",
            "tumor purity: tumor purity analysis results",
            "Tumor purity calculations using the FACETS software (https://github.com/mskcc/facets)..",
            "purity"
        ],
        [
            "analysis/clonality/{run id}/{run id}_pyclone.tsv",
            "tumor clonality: PyClone input file generated by sequenza library (https://cran.r-project.org/web/packages/sequenza/index.html)",
            "Input file generated for PyClone analysis.  Sequenza was used to generate the expected file format (https://github.com/Roth-Lab/pyclone#input-format).",
            "clonality"
        ],
        [
            "analysis/clonality/{run id}/{run id}_table.tsv",
            "tumor clonality: tumor clonality analysis results",
            "Tumor clonality results using PyClone software (https://github.com/Roth-Lab/pyclone)..",
            "clonality"
        ],
        [
            "analysis/copynumber/{run id}/{run id}_cnvcalls.txt",
            "copynumber: copynumber analysis results",
            "Copy number variation analysis results using Sentieon CNV algorithm (https://support.sentieon.com/appnotes/cnv/)",
            "copynumber"
        ],
        [
            "analysis/copynumber/{run id}/{run id}_cnvcalls.txt.tn.tsv",
            "copynumber: copynumber analysis results",
            "Segmented copy number variation file using Sentieon CNV algorithm (https://support.sentieon.com/appnotes/cnv/)",
            "copynumber"
        ],
        [
            "analysis/msisensor2/{run id}/{run id}_msisensor",
            "msisensor2: microsatellite instability calculation",
            "Microsatellite instability calculation using msisensor2 (https://github.com/niu-lab/msisensor2)",
            "msisensor2"
        ],
        [
            "analysis/report.tar.gz",
            "wes report: wes summary html report",
            "This is a gzipped file of the report directory, which contains the report.html file.  After unzipping the file, the user can load report/report.html into any browser to view the WES Summary Report.  The report contains run information (i.e. wes software version used to run the analysis as well as the software version of the major tools) as well as summarizations of sample quality, copy number variation, somatic variants, and HLA-type/neoantigen predictions.",
            "report"
        ],
        [
            "analysis/report/wes_meta/02_wes_run_version.tsv",
            "wes pipeline version- INTERNAL ONLY- for reproducibility",
            "wes pipeline version- INTERNAL ONLY- for reproducibility",
            "report",
            "Miscellaneous"
        ],
        [
            "analysis/report/config.yaml",
            "wes pipeline config file- INTERNAL ONLY- for reproducibility",
            "wes pipeline config file- INTERNAL ONLY- for reproducibility",
            "report",
            "Miscellaneous"
        ],
        [
            "analysis/report/metasheet.csv",
            "wes pipeline metasheet file- INTERNAL ONLY- for reproducibility",
            "wes pipeline metasheet file- INTERNAL ONLY- for reproducibility",
            "report",
            "Miscellaneous"
        ],
        [
            "analysis/report/json/{run id}.wes.json",
            "wes sample json for cohort report generation-INTERNAL ONLY",
            "wes sample json for cohort report generation-INTERNAL ONLY",
            "report",
            "Miscellaneous"
        ],
        [
            "analysis/somatic/{run id}/{run id}_tnscope.filter.exons.broad.vcf.gz",
            "somatic variants: vcf file of filtered somatic variants from center target regions",
            "VCF file of filtered somatic variants from center target regions using bcftools (http://samtools.github.io/bcftools/bcftools.html).",
            "somatic"
        ],
        [
            "analysis/somatic/{run id}/{run id}_tnscope.filter.exons.mda.vcf.gz",
            "somatic variants: vcf file of filtered somatic variants from center target regions",
            "VCF file of filtered somatic variants from center target regions using bcftools (http://samtools.github.io/bcftools/bcftools.html).",
            "somatic"
        ],
        [
            "analysis/somatic/{run id}/{run id}_tnscope.filter.exons.mocha.vcf.gz",
            "somatic variants: vcf file of filtered somatic variants from center target regions",
            "VCF file of filtered somatic variants from center target regions using bcftools (http://samtools.github.io/bcftools/bcftools.html).",
            "somatic"
        ]
    ],
    "normal cimac id": [
        {
            "file_path_template": "analysis/align/{normal cimac id}/{normal cimac id}.sorted.dedup.bam",
            "short_description": "alignment: bam file with deduplicated reads",
            "long_description": "Aligned reads were sorted and marked duplicates were removed using the Sentieon Dedup tool (https://support.sentieon.com/manual/usages/general/#dedup-algorithm)",
            "filter_group": "alignment",
            "file_purpose": "Source view"
        },
        {
            "file_path_template": "analysis/align/{normal cimac id}/{normal cimac id}.sorted.dedup.bam.bai",
            "short_description": "alignment: bam index file for deduplicated bam",
            "long_description": "Bam index file for deduplicated bam file generated by the Sentieon Dedup tool (https://support.sentieon.com/manual/usages/general/#dedup-algorithm)",
            "filter_group": "alignment",
            "file_purpose": "Source view"
        },
        {
            "file_path_template": "analysis/optitype/{normal cimac id}/{normal cimac id}_result.tsv",
            "short_description": "hla: MHC Class I results (using OptiType)",
            "long_description": "Predicted MHC Class I alleles using the Optitype software (https://github.com/FRED-2/OptiType).  Chromosome 6 reads from the deduplicated bam file were extracted and fed into the Optitype prediction algorithm.",
            "filter_group": "HLA",
            "file_purpose": "Analysis view"
        },
        {
            "file_path_template": "analysis/xhla/{normal cimac id}/report-{normal cimac id}-hla.json",
            "short_description": "hla: MHC Class I and II results (using xhla)",
            "long_description": "Predicted MHC Class II and II results using the xHLA software(https://github.com/humanlongevity/HLA).  Chromosome 6 reads from the deduplicated bam file were extracted and fed into the xHLA prediction algorithm.",
            "filter_group": "HLA",
            "file_purpose": "Analysis view"
        },
        {
            "file_path_template": "analysis/metrics/{normal cimac id}/{normal cimac id}_coverage_metrics.txt",
            "short_description": "coverage: global coverage file",
            "long_description": "Genome wide coverage file generated using the Sentieon CoverageMetrics algorithm (https://support.sentieon.com/manual/usages/general/#coveragemetrics-algorithm) with a coverage threshold (cov_thresh) set to 50.",
            "filter_group": "coverage",
            "file_purpose": "Analysis view"
        },
        {
            "file_path_template": "analysis/metrics/{normal cimac id}/{normal cimac id}_target_metrics.txt",
            "short_description": "coverage: target region coverage file",
            "long_description": "Targeted exome regions coverage file using the Sentieon CoverageMetrics algorithm (https://support.sentieon.com/manual/usages/general/#coveragemetrics-algorithm) with a coverage threshold (cov_thresh) set to 50.",
            "filter_group": "coverage",
            "file_purpose": "Analysis view"
        },
        {
            "file_path_template": "analysis/metrics/{normal cimac id}/{normal cimac id}_coverage_metrics.sample_summary.txt",
            "short_description": "coverage: global coverage summary file",
            "long_description": "Genome wide coverage summary file generated by the Sentieon CoverageMetrics algorithm (https://support.sentieon.com/manual/usages/general/#coveragemetrics-algorithm).",
            "filter_group": "coverage",
            "file_purpose": "Analysis view"
        },
        {
            "file_path_template": "analysis/germline/{normal cimac id}/{normal cimac id}_haplotyper.targets.vcf.gz",
            "short_description": "germline: vcf of haplotype variants in targeted regions",
            "long_description": "Haplotype variants within targeted capture regions using Sentieon Haplotyper algorithm (https://support.sentieon.com/manual/usages/general/#haplotyper-algorithm)",
            "filter_group": "germline",
            "file_purpose": "Analysis view"
        }
    ],
    "tumor cimac id": [
        {
            "file_path_template": "analysis/align/{tumor cimac id}/{tumor cimac id}.sorted.dedup.bam",
            "short_description": "alignment: bam file with deduplicated reads",
            "long_description": "Aligned reads were sorted and marked duplicates were removed using the Sentieon Dedup tool (https://support.sentieon.com/manual/usages/general/#dedup-algorithm)",
            "filter_group": "alignment",
            "file_purpose": "Source view"
        },
        {
            "file_path_template": "analysis/align/{tumor cimac id}/{tumor cimac id}.sorted.dedup.bam.bai",
            "short_description": "alignment: bam index file for deduplicated bam",
            "long_description": "Bam index file for deduplicated bam file generated by the Sentieon Dedup tool (https://support.sentieon.com/manual/usages/general/#dedup-algorithm)",
            "filter_group": "alignment",
            "file_purpose": "Source view"
        },
        {
            "file_path_template": "analysis/optitype/{tumor cimac id}/{tumor cimac id}_result.tsv",
            "short_description": "hla: MHC Class I results (using OptiType)",
            "long_description": "Predicted MHC Class I alleles using the Optitype software (https://github.com/FRED-2/OptiType).  Chromosome 6 reads from the deduplicated bam file were extracted and fed into the Optitype prediction algorithm.",
            "filter_group": "HLA",
            "file_purpose": "Analysis view"
        },
        {
            "file_path_template": "analysis/xhla/{tumor cimac id}/report-{tumor cimac id}-hla.json",
            "short_description": "hla: MHC Class I and II results (using xhla)",
            "long_description": "Predicted MHC Class II and II results using the xHLA software(https://github.com/humanlongevity/HLA).  Chromosome 6 reads from the deduplicated bam file were extracted and fed into the xHLA prediction algorithm.",
            "filter_group": "HLA",
            "file_purpose": "Analysis view"
        },
        {
            "file_path_template": "analysis/metrics/{tumor cimac id}/{tumor cimac id}_coverage_metrics.txt",
            "short_description": "coverage: global coverage file",
            "long_description": "Genome wide coverage file generated using the Sentieon CoverageMetrics algorithm (https://support.sentieon.com/manual/usages/general/#coveragemetrics-algorithm) with a coverage threshold (cov_thresh) set to 50.",
            "filter_group": "coverage",
            "file_purpose": "Analysis view"
        },
        {
            "file_path_template": "analysis/metrics/{tumor cimac id}/{tumor cimac id}_target_metrics.txt",
            "short_description": "coverage: target region coverage file",
            "long_description": "Targeted exome regions coverage file using the Sentieon CoverageMetrics algorithm (https://support.sentieon.com/manual/usages/general/#coveragemetrics-algorithm) with a coverage threshold (cov_thresh) set to 50.",
            "filter_group": "coverage",
            "file_purpose": "Analysis view"
        },
        {
            "file_path_template": "analysis/metrics/{tumor cimac id}/{tumor cimac id}_coverage_metrics.sample_summary.txt",
            "short_description": "coverage: global coverage summary file",
            "long_description": "Genome wide coverage summary file generated by the Sentieon CoverageMetrics algorithm (https://support.sentieon.com/manual/usages/general/#coveragemetrics-algorithm).",
            "filter_group": "coverage",
            "file_purpose": "Analysis view"
        },
        {
            "file_path_template": "analysis/germline/{tumor cimac id}/{tumor cimac id}_haplotyper.targets.vcf.gz",
            "short_description": "germline: vcf of haplotype variants in targeted regions",
            "long_description": "Haplotype variants within targeted capture regions using Sentieon Haplotyper algorithm (https://support.sentieon.com/manual/usages/general/#haplotyper-algorithm)",
            "filter_group": "germline",
            "file_purpose": "Analysis view"
        }
    ]
}